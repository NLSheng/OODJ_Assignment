/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package carrental.admin;

import carrental.Admin;
import carrental.Booking;
import java.awt.Color;
import java.awt.Font;
import java.io.BufferedReader;
import java.io.FileReader;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author user
 */
public class ManageBooking extends javax.swing.JInternalFrame {

    /**
     * Creates new form ManageBookingFrame
     */
    public ManageBooking() {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI ui = (BasicInternalFrameUI) this.getUI();
        ui.setNorthPane(null);
        bookingTable.removeColumn(bookingTable.getColumnModel().getColumn(2));
        bookingTable.removeColumn(bookingTable.getColumnModel().getColumn(3));
        bookingTable.removeColumn(bookingTable.getColumnModel().getColumn(5));
        Show_Table();

    }

    private void Show_Table() {
        bookingTable.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 12));
        bookingTable.getTableHeader().setBackground(new Color(0, 0, 0, 150));
        bookingTable.getTableHeader().setForeground(new Color(255, 255, 255));
        bookingTablePane.setOpaque(false);
        bookingTablePane.getViewport().setOpaque(false);
        try {
            DefaultTableModel tableBooking = (DefaultTableModel) bookingTable.getModel();
            BufferedReader brBooking = new BufferedReader(new FileReader("booking.txt"));
            Object[] bookingLines = brBooking.lines().toArray();
            tableBooking.setRowCount(0);
            int j = 1;
            for (int i = 0; i < bookingLines.length; i++) {
                String line = bookingLines[i].toString().trim();
                String[] row = line.split(",");
                if (row[7].equals("pending")) {
                    String record = j + "," + line;
                    String[] rowRecord = record.split(",");
                    tableBooking.addRow(rowRecord);
                    j += 1;
                }
            }
            brBooking.close();
        } catch (Exception ecp) {
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bookingTablePane = new javax.swing.JScrollPane();
        bookingTable = new javax.swing.JTable();
        confirmBookingBtn = new javax.swing.JButton();
        rejectBookingBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        bookingTablePane.setBackground(new java.awt.Color(255, 255, 255));
        bookingTablePane.setBorder(null);

        bookingTable.setBackground(new java.awt.Color(255, 255, 255, 230));
        bookingTable.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        bookingTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "Booking ID", "Customer ID", "Customer Name", "Car ID", "Car Brand", "Car Model", "Car Price", "Booking Status", "Rent Out Date", "Return Date"
            }
        ));
        bookingTable.setFocusable(false);
        bookingTable.setGridColor(new java.awt.Color(255, 255, 255));
        bookingTable.setIntercellSpacing(new java.awt.Dimension(0, 1));
        bookingTable.setOpaque(false);
        bookingTable.setRowHeight(35);
        bookingTable.setSelectionBackground(new java.awt.Color(102, 153, 255));
        bookingTable.setShowGrid(true);
        bookingTable.setShowVerticalLines(false);
        bookingTable.getTableHeader().setReorderingAllowed(false);
        bookingTablePane.setViewportView(bookingTable);

        getContentPane().add(bookingTablePane, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 750, 380));

        confirmBookingBtn.setBackground(new java.awt.Color(25, 135, 84));
        confirmBookingBtn.setForeground(new java.awt.Color(255, 255, 255));
        confirmBookingBtn.setText("Confirm Booking");
        confirmBookingBtn.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 2, true));
        confirmBookingBtn.setFocusable(false);
        confirmBookingBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmBookingBtnActionPerformed(evt);
            }
        });
        getContentPane().add(confirmBookingBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 520, 130, 40));

        rejectBookingBtn.setBackground(new java.awt.Color(25, 135, 84));
        rejectBookingBtn.setForeground(new java.awt.Color(255, 255, 255));
        rejectBookingBtn.setText("Reject Booking");
        rejectBookingBtn.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 2, true));
        rejectBookingBtn.setFocusable(false);
        rejectBookingBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rejectBookingBtnActionPerformed(evt);
            }
        });
        getContentPane().add(rejectBookingBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 520, 130, 40));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void confirmBookingBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmBookingBtnActionPerformed
        try {
            if (bookingTable.getSelectedRowCount() == 1) {
                DefaultTableModel tableBooking = (DefaultTableModel) bookingTable.getModel();
                int i = bookingTable.getSelectedRow();
                String bookingID = tableBooking.getValueAt(i, 1).toString();
                String customerID = tableBooking.getValueAt(i, 2).toString();
                String customerName = tableBooking.getValueAt(i, 3).toString();
                String carID = tableBooking.getValueAt(i, 4).toString();
                String carBrand = tableBooking.getValueAt(i, 5).toString();
                String carModel = tableBooking.getValueAt(i, 6).toString();
                String carPrice = tableBooking.getValueAt(i, 7).toString();
                String bookingStatus = tableBooking.getValueAt(i, 8).toString();
                String rentOutDate = tableBooking.getValueAt(i, 9).toString();
                String returnDate = tableBooking.getValueAt(i, 10).toString();
                Booking booking = new Booking(bookingID);
                Admin admin = new Admin(booking);
                admin.confirmBooking(this);
                Show_Table();

            } else {
                JOptionPane.showMessageDialog(this, "Please select a record to edit");
            }

        } catch (Exception ecp) {
            System.out.println("Something went Wrong");
        }
    }//GEN-LAST:event_confirmBookingBtnActionPerformed

    private void rejectBookingBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rejectBookingBtnActionPerformed

        try {
            if (bookingTable.getSelectedRowCount() == 1) {
                DefaultTableModel tableCar = (DefaultTableModel) bookingTable.getModel();
                int i = bookingTable.getSelectedRow();
                String bookingID = tableCar.getValueAt(i, 1).toString();
                String customerID = tableCar.getValueAt(i, 2).toString();
                String customerName = tableCar.getValueAt(i, 3).toString();
                String carID = tableCar.getValueAt(i, 4).toString();
                String carBrand = tableCar.getValueAt(i, 5).toString();
                String carModel = tableCar.getValueAt(i, 6).toString();
                String carPrice = tableCar.getValueAt(i, 7).toString();
                String bookingStatus = tableCar.getValueAt(i, 8).toString();
                String rentOutDate = tableCar.getValueAt(i, 9).toString();
                String returnDate = tableCar.getValueAt(i, 10).toString();
                Booking booking = new Booking(bookingID);
                Admin admin = new Admin(booking);
                admin.rejectBooking(this);
                Show_Table();

            } else {
                JOptionPane.showMessageDialog(this, "Please select a record to edit");
            }

        } catch (Exception ecp) {
            System.out.println("Something went Wrong");
        }
    }//GEN-LAST:event_rejectBookingBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable bookingTable;
    private javax.swing.JScrollPane bookingTablePane;
    private javax.swing.JButton confirmBookingBtn;
    private javax.swing.JButton rejectBookingBtn;
    // End of variables declaration//GEN-END:variables
}
